#!/usr/local/bin/expect -f
#
# This Expect script was generated by autoexpect on Tue May 13 22:41:52 2014
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "expect_test@FreeBSD10:~ % "
send -- "ssh 102"
expect -exact "\[K"
send -- ""
expect -exact "\[K"
send -- "92.168.1"
expect -exact "\[K"
send -- "37.135\r"
expect -exact "37.135\r\r
Password for expect_test@FreeBSD10:"
send -- "expect_test\r"
expect -exact "\r
Last login: Tue May 13 22:25:50 2014 from 192.168.37.134\r\r
FreeBSD 10.0-RELEASE (GENERIC) #0 r260789: Thu Jan 16 22:34:59 UTC 2014\r
\r
Welcome to FreeBSD!\r
\r
Before seeking technical support, please use the following resources:\r
\r
o  Security advisories and updated errata information for all releases are\r
   at http://www.FreeBSD.org/releases/ - always consult the ERRATA section\r
   for your release first as it's updated frequently.\r
\r
o  The Handbook and FAQ documents are at http://www.FreeBSD.org/ and,\r
   along with the mailing lists, can be searched by going to\r
   http://www.FreeBSD.org/search/.  If the doc package has been installed\r
   (or fetched via pkg install lang-freebsd-doc, where lang is the\r
   2-letter language code, e.g. en), they are also available formatted\r
   in /usr/local/share/doc/freebsd.\r
\r
If you still have a question or problem, please take the output of\r
`uname -a', along with any relevant error messages, and email it\r
as a question to the questions@FreeBSD.org mailing list.  If you are\r
unfamiliar with FreeBSD's directory layout, please refer to the hier(7)\r
manual page.  If you are not familiar with manual pages, type `man man'.\r
\r
Edit /etc/motd to change this login announcement.\r
\r
You can often get answers to your questions about FreeBSD by searching in the\r
FreeBSD mailing list archives at\r
\r
	http://www.FreeBSD.org/search/search.html\r
expect_test@FreeBSD10:~ % "
send -- "su pim\r"
expect -exact "su pim\r\r
Password:"
send -- "1pim;\r"
expect -exact "\r
pim@FreeBSD10:/home/expect_test % "
send -- "date > timestamp\r"
expect -exact "date > timestamp\r\r
timestamp: Permission denied.\r
pim@FreeBSD10:/home/expect_test % "
send -- "cd home\r"
expect -exact "cd home\r\r
~ \r
pim@FreeBSD10:~ % "
send -- "ls\r"
expect -exact "ls\r\r
test	test1	test2	test3\r
pim@FreeBSD10:~ % "
send -- "dt"
expect -exact "\[K"
send -- "ate >t"
expect -exact "\[K"
send -- " timestamp\r"
expect -exact " timestamp\r\r
pim@FreeBSD10:~ % "
send -- "exit\r"
expect -exact "exit\r\r
exit\r
expect_test@FreeBSD10:~ % "
send -- ""
expect -exact "^Dlogout\r
Connection to 192.168.37.135 closed.\r\r
expect_test@FreeBSD10:~ % "
send -- ""
expect eof
